# 当有代码推送到 main 分支时，自动触发此流水线
on:
  push:
    branches: [ "main" ]

jobs:
  # --- 任务一：部署后端 (带有内存优化) ---
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: 1. 下载代码
        uses: actions/checkout@v4

      - name: 2. 设置Java 21环境
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Check disk space on runner
        run: |
          df -h
          # Get available disk space
          available_space=$( df -h / | grep -v Filesystem | awk '{print $4}' )
          echo "Available disk space: $available_space"
          
          # Define the minimum required space in GB
          min_space=10G
          
          # Convert available space to GB and compare
          if [[ $(echo "$available_space < $min_space" | tr -d '[:alpha:]' | bc -l) -gt 0 ]]; then
            echo "Error: Available disk space is less than $min_space."
            exit 1
          else
            echo "Sufficient disk space available."
          fi

      - name: 3. 清理不必要的文件和缓存
        run: |
          # Clean up unnecessary files and caches
          sudo apt-get clean
          sudo rm -rf /usr/share/dotnet/sdk/* /usr/local/lib/ruby/gems/*/cache
          df -h

      - name: 4. 打包后端项目 (使用内存限制)
        # 【关键修正】通过MAVEN_OPTS环境变量，限制Maven最大使用2GB内存
        env:
          MAVEN_OPTS: -Xmx2048m
        run: mvn -f bicycle_sharing/springboot/pom.xml clean package -DskipTests

      - name: 5. 上传后端Jar包
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USER }}
          password: ${{ secrets.ECS_PASSWORD }}
          source: "bicycle_sharing/springboot/target/springboot-0.0.1-SNAPSHOT.jar"
          target: "/app"
          strip_components: 3

      - name: 6. 重启后端服务
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USER }}
          password: ${{ secrets.ECS_PASSWORD }}
          script: |
            PID=$(pgrep -f 'springboot-0.0.1-SNAPSHOT.jar')
            if [ -n "$PID" ]; then
              kill -9 $PID
            fi
            cd /app
            nohup java -jar springboot-0.0.1-SNAPSHOT.jar > backend.log 2>&1 &
            echo "Backend service restarted."

  # --- 任务二：部署前端 (这个任务不变，它本身没有内存问题) ---
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: 1. 下载代码
        uses: actions/checkout@v4
        
      - name: 2. 设置Node.js环境
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: 3. 打包前端项目
        working-directory: ./bicycle_sharing/vue
        run: |
          npm install
          npm run build
          
      - name: 4. 清理服务器旧前端文件
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USER }}
          password: ${{ secrets.ECS_PASSWORD }}
          script: |
            rm -rf /var/www/dist
            echo "Old frontend files removed."
            
      - name: 5. 上传新前端文件
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USER }}
          password: ${{ secrets.ECS_PASSWORD }}
          source: "bicycle_sharing/vue/dist"
          target: "/var/www"
          
      - name: 6. 刷新Nginx
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USER }}
          password: ${{ secrets.ECS_PASSWORD }}
          script: |
            systemctl reload nginx
            echo "Nginx reloaded."
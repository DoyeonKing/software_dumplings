on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # --- 后端构建 ---
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Build Backend
        run: mvn -f bicycle_sharing/springboot/pom.xml clean package -DskipTests

      # --- 前端构建 ---
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Build Frontend
        working-directory: ./bicycle_sharing/vue
        run: |
          npm install
          npm run build

      # --- 上传所有文件到临时目录 ---
      - name: Upload Artifacts to Temp Directory
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USER }}
          password: ${{ secrets.ECS_PASSWORD }}
          source: "bicycle_sharing/springboot/target/springboot-0.0.1-SNAPSHOT.jar,bicycle_sharing/vue/dist"
          target: "/tmp/deploy_staging"
          overwrite: true

      # --- 在服务器上执行部署和重启脚本 ---
      - name: Deploy and Restart Services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USER }}
          password: ${{ secrets.ECS_PASSWORD }}
          script: |
            # 1. 准备最终目录
            mkdir -p /app
            mkdir -p /var/www

            # 2. 部署后端：杀掉旧进程，移动新jar包
            PID=$(pgrep -f 'springboot-0.0.1-SNAPSHOT.jar')
            if [ -n "$PID" ]; then
              kill -9 $PID
              echo "Killed old process with PID: $PID"
            fi
            mv /tmp/deploy_staging/springboot-0.0.1-SNAPSHOT.jar /app/
            
            # 3. 部署前端：先删除旧的，再移动新的
            rm -rf /var/www/dist
            mv /tmp/deploy_staging/dist /var/www/

            # 4. 在后台启动新的后端程序
            cd /app
            nohup java -jar springboot-0.0.1-SNAPSHOT.jar > backend.log 2>&1 &
            echo "Started new backend process."
            
            # 5. 重新加载Nginx配置
            systemctl reload nginx
            echo "Nginx reloaded."
            
            # 6. 清理临时上传目录
            rm -rf /tmp/deploy_staging
# 当有代码推送到 main 分支时，自动触发此流水线
on:
  push:
    branches: [ "main" ]

jobs:
  # 定义一个名为“部署后端”的任务
  deploy-backend:
    # 这个任务运行在GitHub提供的Ubuntu最新版虚拟机上
    runs-on: ubuntu-latest

    steps:
    # 第1步：把你在GitHub上的代码下载到虚拟机里
    - name: Checkout Code
      uses: actions/checkout@v4

    # 第2步：设置Java 17环境
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # 第3步：使用Maven打包Spring Boot后端项目
    - name: Build with Maven
      run: mvn -f bicycle_sharing/springboot/pom.xml clean package -DskipTests

    # 第4步：将打包好的.jar文件上传到你的华为云服务器
    - name: Deploy to ECS
      uses: appleboy/scp-action@v1.0.1
      with:
        host: ${{ secrets.ECS_HOST }}
        username: ${{ secrets.ECS_USER }}
        password: ${{ secrets.ECS_PASSWORD }}
        port: 22
        source: "bicycle_sharing/springboot/target/springboot-0.0.1-SNAPSHOT.jar"
        target: "/app"
        strip_components: 3

  # 定义一个名为“部署前端”的任务
  deploy-frontend:
    # 这个任务同样运行在Ubuntu虚拟机上
    runs-on: ubuntu-latest

    steps:
    # 第1步：下载GitHub代码
    - name: Checkout Code
      uses: actions/checkout@v4

    # 第2步：设置Node.js环境
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    # 第3步：安装前端依赖并打包
    - name: Install and Build Frontend
      working-directory: ./bicycle_sharing/vue
      run: |
        npm install
        npm run build

    # 第4步：将打包好的dist文件夹上传到你的华为云服务器
    - name: Deploy to ECS
      uses: appleboy/scp-action@v1.0.1
      with:
        host: ${{ secrets.ECS_HOST }}
        username: ${{ secrets.ECS_USER }}
        password: ${{ secrets.ECS_PASSWORD }}
        port: 22
        source: "bicycle_sharing/vue/dist"
        target: "/var/www"
        strip_components: 2
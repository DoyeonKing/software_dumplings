# 当有代码推送到 main 分支时，自动触发此流水线
on:
  push:
    branches: [ "main" ]

jobs:
  # 定义一个统一的“构建和部署”任务
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 第1步：下载GitHub代码
    - name: Checkout Code
      uses: actions/checkout@v4

    # === 后端部分 ===
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build Backend with Maven
      run: mvn -f springboot/pom.xml clean package -DskipTests
    - name: Upload Backend to ECS
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.ECS_HOST }}
        username: ${{ secrets.ECS_USER }}
        password: ${{ secrets.ECS_PASSWORD }}
        port: 22
        source: "springboot/target/springboot-0.0.1-SNAPSHOT.jar"
        target: "/app"
        strip_components: 3

    # === 前端部分 ===
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    - name: Install and Build Frontend
      working-directory: ./vue
      run: |
        npm install
        npm run build
    - name: Upload Frontend to ECS
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.ECS_HOST }}
        username: ${{ secrets.ECS_USER }}
        password: ${{ secrets.ECS_PASSWORD }}
        port: 22
        source: "vue/dist"
        target: "/var/www"
        strip_components: 1

    # === 【新增】在服务器上执行重启命令 ===
    - name: Restart Services on ECS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.ECS_HOST }}
        username: ${{ secrets.ECS_USER }}
        password: ${{ secrets.ECS_PASSWORD }}
        port: 22
        script: |
          # 1. 找到正在运行的旧后端程序的进程ID
          PID=$(ps -ef | grep 'springboot-0.0.1-SNAPSHOT.jar' | grep -v grep | awk '{print $2}')
          # 2. 如果找到了，就杀掉它
          if [ -n "$PID" ]; then
            kill -9 $PID
          fi
          # 3. 在后台启动新的后端程序
          nohup java -jar /app/springboot-0.0.1-SNAPSHOT.jar > /app/backend.log 2>&1 &
          # 4. 重新加载Nginx配置，使前端更新生效
          systemctl reload nginx